<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnswerQuestionId" xml:space="preserve">
    <value>The question id cannot be empty.</value>
  </data>
  <data name="AnswerFormId" xml:space="preserve">
    <value>The answer cannot contain the form id itself.</value>
  </data>
  <data name="AnswerValueMax" xml:space="preserve">
    <value>You have exceeded the max length of the value field.</value>
  </data>
  <data name="AnswerRowMax" xml:space="preserve">
    <value>You have exceeded the max length of the row field.</value>
  </data>
  <data name="AnswerColumnMax" xml:space="preserve">
    <value>You have exceeded the max length of the column field.</value>
  </data>
  <data name="AnswerValueNotEmpty" xml:space="preserve">
    <value>The value cannot be empty if you are not using a multiselector type of question.</value>
  </data>
  <data name="AnswerRowNotEmpty" xml:space="preserve">
    <value>The row cannot be empty if you are not using the simple types of question.</value>
  </data>
  <data name="AnswerColumnNotEmpty" xml:space="preserve">
    <value>The column cannot be empty if you are not using the simple types of question.</value>
  </data>
  <data name="CommentContentMax" xml:space="preserve">
    <value>You have exceeded the max length of the comment.</value>
  </data>
  <data name="CommentContentNotEmpty" xml:space="preserve">
    <value>The comment cannot be empty.</value>
  </data>
  <data name="CommonTemplateId" xml:space="preserve">
    <value>The template id cannot be empty.</value>
  </data>
  <data name="FormAnswersNotEmpty" xml:space="preserve">
    <value>The form must have answers.</value>
  </data>
  <data name="FormId" xml:space="preserve">
    <value>The form id cannot be empty.</value>
  </data>
  <data name="QuestionTextMax" xml:space="preserve">
    <value>You have exceeded the max length of the question.</value>
  </data>
  <data name="QuestionDescMax" xml:space="preserve">
    <value>You have exceeded the max length of the description.</value>
  </data>
  <data name="QuestionTextNotEmpty" xml:space="preserve">
    <value>The question title cannot be empty.</value>
  </data>
  <data name="QuestionType" xml:space="preserve">
    <value>The question type is not valid.</value>
  </data>
  <data name="QuestionOptionValueNotEmpty" xml:space="preserve">
    <value>The value cannot be empty.</value>
  </data>
  <data name="QuestionOptionValueMax" xml:space="preserve">
    <value>You have exceeded the max length of the value.</value>
  </data>
  <data name="TemplateTitleMax" xml:space="preserve">
    <value>You have exceeded the max length of the title.</value>
  </data>
  <data name="TemplateTitleNotEmpty" xml:space="preserve">
    <value>The template title cannot be empty.</value>
  </data>
  <data name="TemplateDescNotEmpty" xml:space="preserve">
    <value>The template description cannot be empty.</value>
  </data>
  <data name="TemplateDescMax" xml:space="preserve">
    <value>You have exceeded the max length of the description.</value>
  </data>
  <data name="TemplateTopicId" xml:space="preserve">
    <value>The template must include a topic.</value>
  </data>
  <data name="UserLoginUserOrEmail" xml:space="preserve">
    <value>The username/email field cannot be empty.</value>
  </data>
  <data name="TagNameNotEmpty" xml:space="preserve">
    <value>The tag name cannot be empty.</value>
  </data>
  <data name="TagNameMax" xml:space="preserve">
    <value>You have exceeded the max length of the tag.</value>
  </data>
  <data name="TemplateImageIsNotImage" xml:space="preserve">
    <value>The uploaded file must be an image.</value>
  </data>
  <data name="TemplateIsPublic" xml:space="preserve">
    <value>Is public?</value>
  </data>
  <data name="QuestionOptionRowNotEmpty" xml:space="preserve">
    <value>The row cannot be empty when the column and the value are empty.</value>
  </data>
  <data name="QuestionOptionColumnNotEmpty" xml:space="preserve">
    <value>The column cannot be empty when the row and value are empty.</value>
  </data>
  <data name="TemplateQuestionsNotEmpty" xml:space="preserve">
    <value>The template must contain questions.</value>
  </data>
  <data name="UserLoginWithoutPassword" xml:space="preserve">
    <value>The password must be entered.</value>
  </data>
  <data name="UserExternalService" xml:space="preserve">
    <value>This user was registered by an external service, please use the external service to log in.</value>
  </data>
  <data name="TemplateAccessRangeUserIdsNotEmpty" xml:space="preserve">
    <value>The list of user ids cannot be empty.</value>
  </data>
  <data name="NoFormsText" xml:space="preserve">
    <value>There are not forms at this moment.</value>
  </data>
</root>