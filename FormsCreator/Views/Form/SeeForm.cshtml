@using FormsCreator.Application.Utils
@using FormsCreator.Core.Enums
@model FormResponseDto
@{
    ViewData["Title"] = WebResources.ReviewFormText;
}

<partial name="_MainCommonHeader" model="WebResources.ReviewFormText">

    <section class="d-flex flex-nowrap section-padding pb-100">
        <div class="container mt-5">
            <div class="col-lg-12 col-12">
                <div class="section-title-wrap mb-5">
                    <h4 class="section-title">@WebResources.ReviewFormText</h4>
                </div>
                <span class="text-danger" asp-validation-for="Answers"></span>
            </div>
            <form action="#" method="dialog" enctype="application/x-www-form-urlencoded">
                <div id="questions-section">
                    <ul id="questions-list" class="list-group">
                        <!-- Questions will be dynamically added here -->
                        @foreach (var question in Template.Questions)
                        {
                            <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].QuestionId" value="@question.Id" />
                            <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Id" />
                            if (question.Type == QuestionType.Text || question.Type == QuestionType.Number)
                            {
                                <li class="list-group-item" data-id="@question.Index">
                                    <label class="form-label">@Template.Title</label><br />
                                    <label class="form-label" style="font-size: medium">@Template.Description</label>
                                    <input readonly class="form-control" asp-for="Answers[GetAnswerIndex(question.Id)].Options[0].Value" type="@question.Type.ToString().ToLower()" />
                                    <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[0].Id" />
                                    <span class="text-danger field-validation-valid" style="font-size: small" asp-validation-for="Answers[GetAnswerIndex(question.Id)].Options[0].Value"></span>
                                </li>
                            }
                            else if (question.Type == QuestionType.Multiple_Choice || question.Type == QuestionType.Checkbox || question.Type == QuestionType.Dropdown)
                            {
                                <li class="list-group-item" data-id="@question.Index">
                                    <div class="mb-2">
                                        <label class="form-label">@Template.Title</label><br />
                                        <label class="form-label" style="font-size: medium">@Template.Description</label>
                                        <div class="input-group mb-2">
                                            @if (question.Type == QuestionType.Dropdown)
                                            {
                                                <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[0].Id" />
                                                <select class="form-select" asp-for="Answers[GetAnswerIndex(question.Id)].Options[0].QuestionOptionId" asp-items="new SelectList(question.Options ?? [], nameof(QuestionOptionResponseDto.Id), nameof(QuestionOptionResponseDto.Value))"></select>
                                            }
                                            else if (question.Type == QuestionType.Checkbox)
                                            {
                                                int j = 0;
                                                @foreach (var option in question.Options ?? [])
                                                {
                                                    <div class="form-check">
                                                        <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[j].QuestionOptionId" />
                                                        <input disabled class="form-check-input" type="checkbox" asp-for="Answers[GetAnswerIndex(question.Id)].Options[j].Value" id="option-@option.Id" />
                                                        <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[j].Id" />
                                                        <label class="form-check-label" for="option-@option.Id">
                                                            @option.Value
                                                        </label>
                                                    </div>
                                                    j++;
                                                }
                                            }
                                            else if (question.Type == QuestionType.Multiple_Choice)
                                            {
                                                @foreach (var option in question.Options ?? [])
                                                {
                                                    <div class="form-check">
                                                        <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[0].Id" />
                                                        <input disabled class="form-check-input" type="radio" asp-for="Answers[GetAnswerIndex(question.Id)].Options[0].QuestionOptionId" value="@option.Id" id="option-@option.Id" />
                                                        <label class="form-check-label" for="option-@option.Id">
                                                            @option.Value
                                                        </label>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                            else if (question.Type == QuestionType.Multiple_Choice_Grid || question.Type == QuestionType.Checkbox_Grid)
                            {
                                <li class="list-group-item" data-id="@question.Index">
                                    <div class="mb-2">
                                        <label class="form-label">@Template.Title</label><br />
                                        <label class="form-label" style="font-size: medium">@Template.Description</label>
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    @foreach (var opt in question.Options?.Where(x => !string.IsNullOrWhiteSpace(x.Column)) ?? [])
                                                    {
                                                        <th>
                                                            <div class="input-group">
                                                                <label class="form-label">@opt.Column</label>
                                                            </div>
                                                        </th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var opt in question.Options?.Where(x => !string.IsNullOrWhiteSpace(x.Row)) ?? [])
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="input-group">
                                                                <label type="text" class="form-label">@opt.Row</label>
                                                            </div>
                                                        </td>

                                                        @foreach (var column in question.Options?.Where(x => !string.IsNullOrWhiteSpace(x.Column)) ?? [])
                                                        {
                                                            <td>
                                                                <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[GetOptionIndex(question.Id, column.Column!, opt.Row!)].Id" />
                                                                <input disabled type="@ViewUtils.GetInputType(question.Type)" asp-for="Answers[GetAnswerIndex(question.Id)].Options[GetOptionIndex(question.Id, column.Column!, opt.Row!)].Value" />
                                                                <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[GetOptionIndex(question.Id, column.Column!, opt.Row!)].Column" />
                                                                <input readonly type="hidden" asp-for="Answers[GetAnswerIndex(question.Id)].Options[GetOptionIndex(question.Id, column.Column!, opt.Row!)].Row" />
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </li>
                            }
                        }
                    </ul>
                </div><br />
            </form>
        </div>
    </section>

    @functions {
        TemplateResponseDto Template => ViewBag.Template;

        int GetAnswerIndex(Guid questionId)
        {
            var item = Model.Answers.FirstOrDefault(x => x.QuestionId == questionId);
            if (item is null) return -1;
            return Model.Answers.IndexOf(item);
        }

        int GetOptionIndex(Guid questionId, string column, string row)
        {
            var item = Model.Answers[GetAnswerIndex(questionId)].Options.FirstOrDefault(x => x.Column == column && x.Row == row);
            if (item is null) return -1;
            return Model.Answers[GetAnswerIndex(questionId)].Options.IndexOf(item);
        }
    }
